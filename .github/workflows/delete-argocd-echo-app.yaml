name: delete argocd echo app
on:
  workflow_dispatch:
    inputs:
      repo_name:
        description: 'Echo App Repo to cleanup'
        type: string
        default: 'echo-app'
      keep-repo:
        type: boolean
        description: 'Do not delete repo'
        default: false
      loft-cli-version:
        description: 'Loft CLI version to use'
        default: "v3.2.4"
      cluster-name:
        description: 'Name of GKE cluster to delete echo app from'
        default: "k8s-demo-cluster"
      gcp-region:
        type: choice
        description: 'GCP region of cluster'
        default: "us-east5"
        options:
        - us-east5
        - us-central1
        - us-east4
      gcp-zone:
        type: choice
        description: 'GCP zone of cluster'
        default: "b"
        options: 
        - a
        - b
        - c

env:
  REPO_NAME: ${{ github.event.inputs.repo_name || 'echo-app' }}
  KEEP_REPO: ${{ github.event.inputs.keep-repo || false }}
  CLUSTER_NAME: ${{ github.event.inputs.cluster-name || 'k8s-demo-cluster' }}
  GCP_REGION: ${{ github.event.inputs.gcp-region || 'us-east5' }}
  GCP_ZONE: ${{ github.event.inputs.gcp-region || 'us-east5' }}-${{ github.event.inputs.gcp-zone || 'a' }}
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  GCP_DNS_ZONE: k8s-kurt-madel
  LOFT_CLI_VERSION: ${{ inputs.loft-cli-version || 'v3.2.4' }}

jobs:
  delete-argocd-echo-app-repo:
    if: ${{ !github.env.KEEP_REPO }}
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
      contents: read
    steps:
    - id: checkout
      uses: actions/checkout@v4
    - name: Generate km-demos GitHub App token
      id: generate_token
      uses: tibdex/github-app-token@v1.8.0
      with:
          app_id: ${{ secrets.KM_DEMOS_GITHUB_APP_ID }}
          private_key: ${{ secrets.KM_DEMOS_GITHUB_APP_KEY }}
    - id: github-cleanup
      shell: bash
      env:
        GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
      run: |
        gh api \
          --method DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/km-demos/$REPO_NAME
    - id: 'gcp-auth'
      name: 'Authenticate to Google Cloud'
      uses: google-github-actions/auth@v1.1.1
      with:
        workload_identity_provider: ${{ secrets.WIF_POOL }}
        service_account: ${{ secrets.SA_EMAIL }}
    - id: get-credentials
      uses: google-github-actions/get-gke-credentials@v1.0.2
      with:
        cluster_name: ${{ env.CLUSTER_NAME }}
        location: ${{ env.GCP_ZONE }}
    - id: gcp-cleanup
      run: |
        kubectl delete application --ignore-not-found=true -n argocd $REPO_NAME
        kubectl delete applicationset --ignore-not-found=true -n argocd $REPO_NAME
        kubectl delete ns --ignore-not-found=true $REPO_NAME
        gcloud dns record-sets delete $REPO_NAME.k8s.kurtmadel.com. --type=A --zone=$GCP_DNS_ZONE --project=$GCP_PROJECT_ID

    - id: github-delete-package
      shell: bash
      run: |
        curl -L \
          -X DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.DELETE_PACKAGES_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/orgs/km-demos/packages/container/$REPO_NAME

  clean-up-loft:
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
      contents: read
    steps:
    - name: checkout
      uses: actions/checkout@v4

    - id: install-loft-cli
      uses: loft-sh/setup-loft@v2
      with:
        version: ${{ env.LOFT_CLI_VERSION }}
        url: ${{ secrets.LOFT_URL }}
        # Specify your Loft access key here
        access-key: ${{ secrets.LOFT_DEV_CLUSTER_ACCESS_KEY }}

    - id: delete-loft-preview-demo-user
      run: |
        loft use management
        kubectl delete users.management.loft.sh beedemo-dev
        kubectl delete projects.management.loft.sh preview
        kubectl delete virtualclustertemplates.management.loft.sh preview-template
        kubectl delete teams.management.loft.sh echo-dev 
        kubectl delete clusterroletemplates.management.loft.sh vcluster-instance-read
        